#!/system/bin/sh

Split="true"
# 是否开启配置文件分割
# proxies:以上的配置内容为→clash.yaml
# proxies:以下的配置内容为→config.yaml
# 关闭可能会导致dashbroad出现兼容性问题

disable_ipv6="false"
# 是否禁用ipv6(不是ipv6不进行代理 而是全局禁用)

sleeptime="10"
# 监听packages.list的间隔时间

auto_updateSubcript="true"
# 是否开启自动更新订阅

auto_updateGeoIP="true"
# 是否开启自动更新GeoIP.dat资源文件

auto_updateGeoSite="true"
# 是否开启自动更新GeoSite.dat资源文件

auto_updateclashMeta="true"
# 是否开启自动更新clashMeta内核

restart_update="false"
# 更新内核后是否重启clashMeta

alpha="false"
# 是否下载alpha版本

go120="false"
# 使用go 1.20编译的版本

cgo="false"
# 是否下载cgo版本clashMeta内核 (cgo为Go中允许Go代码直接调用C函数的功能)

update_subcriptInterval="0 8 * * *"
# 自动更新订阅间隔(默认每天早上8点)

update_geoXInterval="0 8 * * *"
# 自动更新ip数据库和检查更新clashMeta间隔(默认每天早上8点)

Clash_port_skipdetection="true"
# 是否跳过端口检查

WaitClashStartTime="4"
# 等待clash启动时间(单位:秒)，过短会导致端口检测误判(跳过端口检查时无效)

ghproxy="https://mirror.ghproxy.com"
# 设置github代理

safe_ui="true"
#仅允许本机访问api

mode="global"
# cfm运行模式：
# blacklist(指定应用不走代理)
# whitelist(仅指定应用走代理)
# global(全局代理)
# socks(仅运行核心不代理流量)
# 要指定的应用在packages.list填写包名每行一个(global模式不生效)

static_dns="223.5.5.5"
# 默认系统dns

Clash_bin_name="clashMeta"
# 启动的clash文件名(在clashkernel文件夹内)

proxyGoogle="false"
# 自动代理Google系所有app

ml="false"
# 自动获取当地免流ip(腾讯系和百度系) http代理服务器填写 腾讯系免流ip 和 百度系免流ip 即可

adguard="false"
# 开启adguard home扩展

mosdns="false"
# 开启mosdns扩展

nat_kernel="true"
# 允许iptables nat转发

Clash_old_logs="false"
# 是否保存每次的运行日志

# 自动绕过本机ip,filter_local请勿轻易打开,打开后有可能引起设备软重启,如你手机有获取到公网ip.
# 优先重启cfm,即可绕过本机ip,检查是否正常,次要选择尝试打开filter_local,如遇设备软重启,请关闭.
filter_local=""
# 请不要轻易打开. 不要轻易打开,不要轻易打开.

Cgroup_memory_limit=""
# 限制内存使用，量力而行，限制太死会造成CPU占用过高，-1则不限制，留空则不操作
# 更新限制请保存后执行 /data/clash/scripts/clash.tool -l


# 以下内容不要修改否则无法启动！！以下内容不要修改否则无法启动！！以下内容不要修改否则无法启动！！
pref_id="5000"
mark_id="2021"
table_id="2021"
Cgroup_memory_path=""
Clash_data_dir="/data/clash"
Clash_run_path="${Clash_data_dir}/run"
Clash_bin_path="${Clash_data_dir}/bin"
CFM_logs_file="${Clash_run_path}/run.logs"
CFM_OldLogs_file="${Clash_run_path}/run.old.logs"
template_file="${Clash_data_dir}/clash.yaml"
rule_file="${Clash_data_dir}/rule.yaml"
appuid_file="${Clash_run_path}/appuid.list"
Clash_pid_file="${Clash_run_path}/clash.pid"
ClashScript_pid_file="${Clash_run_path}/clashs.pid"
Adguard_pid_file="${Clash_run_path}/adg.pid"
Mosdns_pid_file="${Clash_run_path}/mosdns.pid"
Clash_bin_path="${Clash_data_dir}/clashkernel/${Clash_bin_name}"
Adguard_bin_path="${Clash_data_dir}/adguard/AdGuardHome"
Adguard_config_file="${Clash_data_dir}/AdGuardHome.yaml"
Mosdns_bin_path="${Clash_data_dir}/mosdns/mosdns"
Mosdns_config_file="${Clash_data_dir}/mosdns.yaml"
Clash_config_file="${Clash_data_dir}/config.yaml"
system_packages_file="/data/system/packages.list"
temporary_config_file="${Clash_run_path}/config.yaml"
filter_packages_file="${Clash_data_dir}/packages.list"
Clash_GeoSite_file="${Clash_data_dir}/GeoSite.dat"
geodata_mode="$(grep "geodata-mode" "${template_file}" | grep -v "#" | awk -F ': ' '{print $2}')"
chmod -R 6755 "${Clash_data_dir}/clashkernel"
GeoIP_dat_url="$(grep "geoip" "${template_file}" | grep -v "#" | awk -F 'geoip: ' '{print $2}' | sed 's/\"//g' | sed "s/\'//g")"
Country_mmdb_url="$(grep "mmdb" "${template_file}" | grep -v "#" | awk -F 'mmdb: ' '{print $2}' | sed 's/\"//g' | sed "s/\'//g")"
GeoSite_url="$(grep "geosite" "${template_file}" | grep -v "#" | awk -F 'geosite: ' '{print $2}' | sed 's/\"//g' | sed "s/\'//g")"
ipv6="$(grep "ipv6" "${template_file}" | grep -v "#" | head -n 1 | awk -F ': ' '{print $2}')"
Geo_auto_update="$(grep "geo-auto-update" ${template_file} | grep -v "#" | head -n 1 | awk -F ': ' '{print $2}')"

if [[ ! "${ipv6}" ]];then
    ipv6="false"
fi

if [[ ! "${GeoIP_dat_url}" ]]; then
    GeoIP_dat_url="https://jsd.onmicrosoft.cn/gh/Loyalsoldier/geoip@release/geoip.dat"
fi
if [[ ! "${Country_mmdb_url}" ]]; then
    Country_mmdb_url="https://jsd.onmicrosoft.cn/gh/Loyalsoldier/geoip@release/Country.mmdb"
fi

if [[ ! "${GeoSite_url}" ]]; then
    GeoSite_url="https://jsd.onmicrosoft.cn/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
fi

if [[ "${geodata_mode}" ]]; then
    Clash_GeoIP_file="${Clash_data_dir}/GeoIP.dat"
    GeoIP_url=${GeoIP_dat_url}
else
    Clash_GeoIP_file="${Clash_data_dir}/Country.mmdb"
    GeoIP_url=${Country_mmdb_url}
fi

Clash_permissions="6755"
Clash_user_group="root:net_admin"
iptables_wait="iptables -w 100"
ip6tables_wait="ip6tables -w 100"
Clash_user=$(echo ${Clash_user_group} | awk -F ':' '{print $1}')
Clash_group=$(echo ${Clash_user_group} | awk -F ':' '{print $2}')

if [ ${adguard} == "true" ];then
    Clash_dns_port=$(grep "port" ${Adguard_config_file} | grep -v "#" | grep "^  port:" | cut -d ' ' -f 4)
elif [ ${mosdns} == "true" ];then
    Clash_dns_port=$(grep "listen:" ${Mosdns_config_file} | grep -v "#" | sort | uniq -c | awk -F ':' '{print $3}')
else
    Clash_dns_port=$(grep "listen" ${template_file} | grep -v "#" | awk -F ':' '{print $3}')
fi
Clash_ui_port=$(grep "external-controller" ${template_file} | grep -v "#" | awk -F ':' '{print $3}')
Clash_enhanced_mode=$(grep "enhanced-mode" ${template_file} | grep -v "#" | awk -F ': ' '{print $2}')
Clash_tproxy_port=$(grep "tproxy-port" ${template_file} | grep -v "#" | awk -F ': ' '{print $2}')
Clash_tun_status=$(awk -F ': ' '/^tun: *$/{getline; print $2}' ${template_file})
Clash_auto_route=$(grep "auto-route" ${template_file} | grep -v "#" | awk -F ': ' '{print $2}')
tun_device=$(awk -F ': ' '/ +device: /{print $2}' ${template_file})
if [ "${Clash_tun_status}" == "" ]; then
    Clash_tun_status="false"
fi
if [ "${Clash_auto_route}" == "" ]; then
    Clash_auto_route="false"
fi
if [ "${tun_device}" == "" ]; then
    tun_device="Meta"
fi
log() {
    if [ ${Clash_old_logs} == "true" ];then
        echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]$1>>${CFM_logs_file}
        echo [`TZ=Asia/Shanghai date "+%Y-%m-%d %H:%M:%S"`]$1>>${CFM_OldLogs_file}
    else
        echo [`TZ=Asia/Shanghai date "+%H:%M:%S"`]$1>>${CFM_logs_file}
    fi
    echo $1
}
if command -v magisk &> /dev/null ;then
    busybox_path="/data/adb/magisk/busybox"
else
    for i in $(find /data/adb -name busybox -type f -size +1M)
    do
        if [[ $i == "/data/adb/magisk/busybox" ]];then
            log "err: 你似乎已经卸载magisk 但是${i}依然存在"
        else
            if ! $i | grep "Permission denied";then
                busybox_path="${i}"
                break
            fi
        fi
    done
fi

if [ "${disable_ipv6}" == "true" ]; then
    echo "1">/proc/sys/net/ipv6/conf/all/disable_ipv6
else
    echo "0">/proc/sys/net/ipv6/conf/all/disable_ipv6
fi
export PATH=${busybox_path}:${Clash_bin_path}:${PATH}
reserved_ip=(0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.0.2.0/24 192.168.0.0/16 198.51.100.0/24 203.0.113.0/24 224.0.0.0/4 255.255.255.255/32 240.0.0.0/4)
reserved_ip6=(::/128 ::1/128 ::ffff:0:0/96 100::/64 64:ff9b::/96 2001::/32 2001:10::/28 2001:20::/28 2001:db8::/32 2002::/16 fc00::/7 fe80::/10 ff00::/8)